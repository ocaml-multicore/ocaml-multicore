Hello, world!
Hello, world!
Hello, world!
Fatal error: exception Invalid_argument("index out of bounds")
sum(100000) = 5000050000
0
[Caml] Call caml_to_c
[Caml] Enter c_to_caml
[Caml] Leave c_to_caml
[Caml] Return from caml_to_c
[C] Enter caml_to_c
[C] Call c_to_caml
[C] Return from c_to_caml
[C] Leave caml_to_c
[Caml] Call caml_to_c
[Caml] Enter c_to_caml
0
5000050000
[Caml] Leave c_to_caml
[Caml] Return from caml_to_c
[C] Enter caml_to_c
[C] Call c_to_caml
[C] Return from c_to_caml
[C] Leave caml_to_c
[Caml] Call caml_to_c
[Caml] Enter c_to_caml
[Caml] c_to_caml: raise exception
[Caml] Caught exception
[C] Enter caml_to_c
[C] Call c_to_caml
[Caml] Call caml_to_c
[Caml] Enter c_to_caml
c_to_caml: n=66
[Caml] Leave c_to_caml
[Caml] Return from caml_to_c
[C] Enter caml_to_c
[C] Call c_to_caml
[C] Return from c_to_caml
[C] Leave caml_to_c
10
perform effect (E 0)
caught effect (E 0). continuting..
perform returns 1
done 2
continue returns 3
result=4
in handler. raising X
10
4
8
Fatal error: exception Unhandled
[Caml] Call caml_to_c
[Caml] Enter c_to_caml
[Caml] c_to_caml: raise exception
[Caml] Caught exception
[Caml] Enter c_to_caml
[Caml] c_to_caml: raise exception
[Caml] Caught exceception again
[Caml] Done
[C] Enter caml_to_c
[C] Call c_to_caml
[C] Enter caml_to_c
[C] Call c_to_caml
[Caml] Call caml_to_c
[Caml] Enter c_to_caml
[Caml] c_to_caml: perform effect
[Caml] Caught Unhandled, perform effect
[Caml] Caught effect
[C] Enter caml_to_c
[C] Call c_to_caml
Hello
Hello, again!
intercepting request..
Hello
Fatal error: exception Not_found
Hello
Hello, again!
